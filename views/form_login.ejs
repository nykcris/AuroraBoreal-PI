<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="css/style_form.css">
    <link rel="stylesheet" href="css/custom_style.css">
    <link rel="icon" type="image/x-icon" href="img/AURORALOGOSFUNDO.ico" />
    <title>Aurora Boreal</title>
</head>

<body>
    <div class="wrapper">
        <nav class="nav">
            <div class="nav-logo">

            </div>
            <div class="nav-menu" id="navMenu">
                <ul>
                    <li><a href="/" class="link active">voltar</a></li>

                </ul>
            </div>
            <div class="nav-button">
                <button class="btn white-btn" id="loginBtn" onclick="">Login</button>
            </div>
            <div class="nav-menu-btn">
                <i class="bx bx-menu" onclick="myMenuFunction()"></i>
            </div>
        </nav>
        <!----------------------------- Form box ----------------------------------->
        <div class="form-box">

            <!------------------- login form -------------------------->

            <div class="login-container" id="login">
                <div class="top">

                    <header>Login</header>
                </div>
                <legend class="col-form-label col-sm-2 pt-0">Entrar como: </legend>
                <select name="type" id="type" style="margin-bottom: 40px;">
                    <% users.forEach(user=> { %>
                        <option class="optype" id="optype-<%= user[" id_perfil"] %>" value="<%= user["id_perfil"] %>">
                                <%= user["desc_perfil"] %>
                        </option>
                        <% }) %>
                </select>
                <div class="input-box">
                    <input type="email" class="input-field" placeholder="Email" id="email-login" required>
                    <i class="bx bx-envelope"></i>
                    <small id="email-login-error" style="color: red; display: none;">Email inválido</small>
                </div>
                <div class="input-box">
                    <input type="password" class="input-field" placeholder="senha" id="senha-login" required>
                    <i class="bx bx-lock-alt"></i>
                    <small id="senha-login-error" style="color: red; display: none;">Senha inválida (mínimo 8 caracteres,
                        1 número, 1 letra e 1 caractere especial)</small>
                </div>
                <div class="input-box">
                    <input type="submit" class="submit" value="Entrar" onclick="handleLogin(event)">
                </div>
                <div class="two-col">
                    <div class="one">
                        <input type="checkbox" id="login-check">
                        <label for="login-check"> Deixar-me logado</label>
                    </div>
                </div>
            </div>

            <script>

                function validateEmail(email) {
                    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
                    return emailRegex.test(email);
                }

                function validatePassword(senha) {
                    const senhaRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})/;
                    return senhaRegex.test(senha);
                }

                function showError(elementId, errorId, condition) {
                    document.getElementById(errorId).style.display = condition ? 'none' : 'inline';
                }

                function handleLogin(event) {
                    event.preventDefault(); // Evita o envio do formulário
                    const email = document.getElementById('email-login').value.trim();
                    const senha = document.getElementById('senha-login').value.trim();
                    console.log(email, senha);
                    let isValid = true;

                    // Valida Email
                    const emailValido = email !== '' && validateEmail(email);
                    showError('email-login', 'email-login-error', emailValido);

                    // Valida senha
                    const senhaValida = senha !== '' && validatePassword(senha);
                    showError('senha-login', 'senha-login-error', senhaValida);

                    if (!emailValido || !senhaValida) {
                        return; // Para a execução se houver erros
                    }

                    let body = {
                        email: email,
                        senha: senha
                    };

                    fetch('/system/postlogin', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(body)
                    })
                    .then(res => {
                        if(res.ok) {
                            return res.json();
                        } else {
                            throw new Error('Connection refused');
                        }
                    })
                    .then(data => {
                        if (data.success) {
                            // Redireciona com base no papel selecionado
                            switch (data.role) {
                                case '3':
                                    window.location.href = 'alunos';
                                    break;
                                case '4':
                                    window.location.href = 'professores';
                                    break;
                                case '2':
                                    window.location.href = 'direcao';
                                    break;
                                default:
                                    window.location.href = 'alunos';
                            }
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(err => alert(err.message));
                }


                function myMenuFunction() {
                    var i = document.getElementById("navMenu");
                    if (i.className === "nav-menu") {
                        i.className += " responsive";
                    } else {
                        i.className = "nav-menu";
                    }
                }



                var a = document.getElementById("loginBtn");
                var b = document.getElementById("registerBtn");
                var x = document.getElementById("login");
                var y = document.getElementById("register");
                function login() {
                    x.style.left = "4px";
                    y.style.right = "-520px";
                    a.className += " white-btn";
                    b.className = "btn";
                    x.style.opacity = 1;
                    y.style.opacity = 0;

                }
                function register() {
                    x.style.left = "-510px";
                    y.style.right = "5px";
                    a.className = "btn";
                    b.className += " white-btn";
                    x.style.opacity = 0;
                    y.style.opacity = 1;
                }
            </script>

</body>

</html>

